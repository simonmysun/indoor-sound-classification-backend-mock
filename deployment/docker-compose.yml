version: '3.8'
services:
  nginx:
    image: nginx:1.22.1@sha256:4c5e1e4ab724db750979851cd2f4e2dec13648792280be1cd052bf9c638285da
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./nginx/config/:/etc/nginx/:ro
      - ./nginx/logs/:/logs/
      - ./static:/usr/share/nginx/:ro
    networks:
      - nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`thesis-frontend-static.example.com`)
      - traefik.http.routers.nginx.priority=1
  mosquitto:
    image: eclipse-mosquitto:2.0.15@sha256:29c92f9144d4e65f7e647694d4b6aa7f0ac6a995bd102251ea05f7edf258ad20
    restart: unless-stopped
    volumes:
      - ./mosquitto/config/:/mosquitto/config/:ro # TuC:12d6d9d3a7bb516ebd27979e45358faa526b6bdd,TuCDataSource:b52393dda08af7a991e7af074f377997a082f652
      - /mosquitto/data:/mosquitto/data/
    expose:
      - 9001
    labels:
      - traefik.enable=true
      - traefik.http.routers.mosquitto.rule=(Host(`thesis-frontend.example.com`)) && Path(`/mqtt`)
      - traefik.http.services.mosquitto.loadbalancer.server.port=9001
  prometheus:
    container_name: "thesis-backend_prometheus"
    image: prom/prometheus:v2.41.0@sha256:1a3e9a878e50cd339ae7cf5718fda08381dda2d4ccd28e94bbaa3190d1a566c2
    restart: unless-stopped
    user: 1000:1000
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules/:/etc/prometheus/rules/:ro
      - ./db/alerts.yml:/etc/prometheus/rules/alerts.yml
      - ./prometheus/data/:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=12w'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - thesis-backend
  alertmanager:
    container_name: "thesis-backend_alertmanager"
    image: prom/alertmanager:v0.25.0@sha256:fd4d9a3dd1fd0125108417be21be917f19cc76262347086509a0d43f29b80e98
    restart: unless-stopped
    expose:
      - 9093
    volumes:
      - ./alertmanager/config:/config:ro
      - ./alertmanager/data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - thesis-backend
  backend-mock:
    container_name: "thesis-backend_backend-mock"
    build: ./thesis-backend-mock/
    restart: unless-stopped
    volumes:
      - ./db/:/usr/src/app/db
    expose:
      - 3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.thesis-backend-mock.rule=Host(`thesis-frontend.example.com`)
      - traefik.http.services.thesis-backend-mock.loadbalancer.server.port=3001
      - traefik.docker.network=thesis-backend
    networks:
      - thesis-backend
  mqtt-mock-1:
    container_name: "thesis-backend_mqtt-mock-1"
    environment:
      deviceId: fake_datasource_1
      msgFreq: 1000
    env_file:
      - ./.env
    build:
      context: ./thesis-backend-mqtt-mock/
    restart: unless-stopped
    networks:
      - thesis-backend
  mqtt-mock-3:
    container_name: "thesis-backend_mqtt-mock-3"
    environment:
      deviceId: fake_datasource_3
      msgFreq: 200
    env_file:
      - ./.env
    build:
      context: ./thesis-backend-mqtt-mock/
    restart: unless-stopped
    networks:
      - thesis-backend
  grafana:
    container_name: "thesis-backend_grafana"
    image: grafana/grafana:9.3.2@sha256:2a73ae33c9f0c51af6eced2ef185d5d3682b4c378c4fdd6941a14e8ea4a3e95b
    restart: unless-stopped
    expose:
      - 3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    # plugins: grafana-cli plugins install neocat-cal-heatmap-panel
    # plugins: grafana-cli plugins install marcusolsson-hourly-heatmap-panel
    networks:
      - thesis-backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.thesis-backend-grafana.rule=Host(`thesis-backend-grafana.example.com`)
      - traefik.http.services.thesis-backend-grafana.loadbalancer.server.port=3000
      - traefik.docker.network=thesis-backend
  thesis-backend-mqtt-exporter:
    container_name: "thesis-backend_thesis-backend-mqtt-exporter"
    expose:
      - 9000
    environment:
      topic: tele/indoor_sound_classification/+/state
    env_file:
      - ./.env
    build:
      context: ./thesis-backend-mqtt-exporter/
    networks:
      - thesis-backend
    restart: unless-stopped
networks:
  thesis-backend:
    driver: bridge
